/* ========================= eCAL LICENSE =================================
 *
 * Copyright (C) 2016 - 2025 Continental Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ========================= eCAL LICENSE =================================
*/

syntax = "proto3";

package eCAL.pb.rec_client;

message State
{
  // eCAL Rec 2.0 message
  // 
  // message WriterState
  // {
  //   bool          recording                    =  1;
  //   bool          flushing                     =  2;
  //   int64         recording_length_frame_count =  3;
  //   double        recording_length_secs        =  4;
  //   int64         queued_frames_count          =  5;
  //   double        queued_secs                  =  6;
  // }
  
  message RecHdf5Status
  {
    double        total_length_secs            =  1;
    int64         total_frame_count            =  2;
    int64         unflushed_frame_count        =  3;
    bool          info_ok                      =  4;
    string        info_message                 =  5;
  }
  
  message RecAddonJobStatus
  {
    enum State
    {
      NotStarted       = 0;
      Recording        = 1;
      Flushing         = 2;
      FinishedFlushing = 3;
    }
    
    State         state                        =  1;
    int64         total_frame_count            =  2;
    int64         unflushed_frame_count        =  3;
    bool          info_ok                      =  4;
    string        info_message                 =  5;
  }
  
  message UploadStatus
  {
    int64         bytes_total_size             =  1;
    int64         bytes_uploaded               =  2;
    bool          info_ok                      =  3;
    string        info_message                 =  4;
  }
  
  enum JobState
  {
    NotStarted             = 0;
    
    Recording              = 1;
    Flushing               = 2;
    FinishedFlushing       = 3;
    
    Uploading              = 4;
    FinishedUploading      = 5;
  }
  
  message JobStatus
  {
    int64                            job_id             =  1;
    JobState                         state              =  2;
    RecHdf5Status                    rec_hdf5_status    =  3;
    map <string, RecAddonJobStatus>  rec_addon_statuses =  4;
    UploadStatus                     upload_status      =  5;
    bool                             is_deleted         =  6;
  }
  
  message RecorderAddonStatus
  {
    string addon_executable_path         =  1;
    string addon_id                      =  2;
    bool   initialized                   =  3;
    string name                          =  4;
    int64  pre_buffer_length_frame_count =  5;
    bool   info_ok                       =  6;
    string info_message                  =  7;
  }
  
  reserved 1 to 10; // eCAL Rec 1 fields
                    //
                    //     enum eState
                    //     {
                    //       waiting   = 0;
                    //       buffering = 1;
                    //       recording = 2;
                    //       closing   = 3;
                    //       flushing  = 4; 
                    //     }
                    //
                    // eState  state                       =  1;
                    // string  current_measurement_folder  =  2;
                    // int64   split_size                  =  3;
                    // int32   pre_trigger                 =  4;
                    // bool    local_only_topics           =  5;
                    // string  host_node_name              =  6;
                    // uint32  flush_progress              =  7;
                    // string  notification                =  8;
                    // string  app_version                 =  9;
                    // double  recording_length            = 10;

  reserved 14;  // eCAL Rec 2.0 field 
                // WriterState main_recorder_state = 14;

  reserved 22;  // eCAL Rec 2.0 field
                // repeated WriterState buffer_writer_states = 22;

  string                       host_name                         = 11;
  int32                        process_id                              = 12;

  bool                         initialized                      = 13;
  int64                        pre_buffer_length_frames_count   = 20;
  double                       pre_buffer_length_secs           = 21;
  repeated string              subscribed_topics                = 23;
  repeated RecorderAddonStatus addon_statuses                   = 24;
  repeated JobStatus           job_statuses                     = 25;
  
  bool                         info_ok                          = 26;
  string                       info_message                     = 27;
  
  int64                        timestamp_nsecs                  = 28;
}