; ========================= eCAL LICENSE =================================
;
; Copyright (C) 2016 - 2025 Continental Corporation
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;      http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; ========================= eCAL LICENSE =================================

; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define AppName                 "@CPACK_PACKAGE_NAME@"
#define AppVersion              "@CPACK_PACKAGE_VERSION_MAJOR@.@CPACK_PACKAGE_VERSION_MINOR@.@CPACK_PACKAGE_VERSION_PATCH@"
#define AppPublisher            "@CPACK_PACKAGE_VENDOR@"
#define AppDateTime             GetDateTimeString('yyyy-mm-dd', '', '');
#define OutputName              str("ecal-")+str(AppVersion)+str("-win64")
#define ComponentStagingDir     "@CPACK_TEMPORARY_INSTALL_DIRECTORY@"
#define DebugSdkStagingDir      StringChange(ComponentStagingDir, "/complete/", "/sdk/")
#define CSharpStagingDir        StringChange(StringChange(ComponentStagingDir, "/complete/", "/csharp/"), "/eCAL-", "/ecal_csharp-")
#define OutputDir               "@CPACK_PACKAGE_DIRECTORY@/@CPACK_OUTPUT_FILE_PREFIX@"
#define LicenseFile             "@CPACK_RESOURCE_FILE_LICENSE@"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
AppId={#AppName}
AppName={#AppName}
AppVersion={#AppVersion}
AppVerName={#AppName} {#AppVersion}
AppPublisher={#AppPublisher}
DefaultDirName={sd}\{#AppName}
DefaultGroupName={#AppName}
WizardImageFile=gfx\logo_iss.bmp
WizardSmallImageFile=gfx\logo_55_55.bmp,gfx\logo_110_110.bmp
OutputDir={#OutputDir}
OutputBaseFilename={#OutputName}
Compression=lzma2
SolidCompression=yes
ChangesAssociations=yes
; PrivilegesRequired=admin
; Only available in Version 6 and above:
PrivilegesRequiredOverridesAllowed=dialog
ArchitecturesInstallIn64BitMode=x64compatible
ChangesEnvironment=true
VersionInfoVersion={#AppVersion}
LicenseFile={#LicenseFile}

[Components]
Name: runtime;        Description: "eCAL Runtime";                             Types: full compact custom; Flags: disablenouninstallwarning fixed
Name: applications;   Description: "Applications (Monitor, Recorder, Player)"; Types: full compact custom; Flags: disablenouninstallwarning
Name: samples;        Description: "Samples";                                  Types: full;                Flags: disablenouninstallwarning
Name: doc;            Description: "Documentation";                            Types: full;                Flags: disablenouninstallwarning
Name: sdk;            Description: "SDK";                                      Types: full;
Name: sdk\ecal;       Description: "eCAL SDK";                                 Types: full;                Flags: disablenouninstallwarning
Name: sdk\protobuf;   Description: "Protobuf";                                 Types: full;                Flags: disablenouninstallwarning
Name: sdk\hdf5;       Description: "HDF5";                                     Types: full;                Flags: disablenouninstallwarning

[Tasks]
Name: "desktopicon";  Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";     Flags: unchecked
Name: "replaceconf";  Description: "Overwrite existing configuration";                                     Flags: checkedonce
Name: "modifypath";   Description: "Add application directory to your environmental path";                 Flags: checkedonce

[Files]
; runtime
Source: "{#ComponentStagingDir}\runtime\*";           DestDir: "{app}";      Flags: ignoreversion recursesubdirs; Components: runtime
Source: "{#ComponentStagingDir}\Unspecified\*";       DestDir: "{app}";      Flags: ignoreversion recursesubdirs; Components: runtime
Source: "{#ComponentStagingDir}\libraries\bin\*";     DestDir: "{app}\bin\"; Flags: ignoreversion recursesubdirs; Components: runtime

; we need to change the location of these configuration file (as hotfix we use skipifsourcedoesntexist flag)
Source: "{#ComponentStagingDir}\configuration\etc\ecal.yaml";     DestDir: "{app}\etc\"; Tasks: not replaceconf; Flags: ignoreversion skipifsourcedoesntexist confirmoverwrite; Components: runtime
Source: "{#ComponentStagingDir}\configuration\etc\ecal.yaml";     DestDir: "{app}\etc\"; Tasks: replaceconf;     Flags: ignoreversion skipifsourcedoesntexist;                  Components: runtime
Source: "{#ComponentStagingDir}\configuration\etc\ecaltime.yaml";  DestDir: "{app}\etc\";                         Flags: ignoreversion skipifsourcedoesntexist;                  Components: runtime

; we need to change the location of these configuration file (as hotfix we use skipifsourcedoesntexist flag)
Source: "{#ComponentStagingDir}\_configuration\etc\ecal.yaml";    DestDir: "{app}\etc\"; Tasks: not replaceconf; Flags: ignoreversion skipifsourcedoesntexist confirmoverwrite; Components: runtime
Source: "{#ComponentStagingDir}\_configuration\etc\ecal.yaml";    DestDir: "{app}\etc\"; Tasks: replaceconf;     Flags: ignoreversion skipifsourcedoesntexist;                  Components: runtime
Source: "{#ComponentStagingDir}\_configuration\etc\ecaltime.yaml"; DestDir: "{app}\etc\";                         Flags: ignoreversion skipifsourcedoesntexist;                  Components: runtime

Source: "{#CSharpStagingDir}\runtime\*";              DestDir: "{app}";      Flags: ignoreversion recursesubdirs; Components: runtime

; applications
Source: "{#ComponentStagingDir}\app\*";               DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: applications

; samples
Source: "{#ComponentStagingDir}\samples\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: samples

; doc
Source: "{#ComponentStagingDir}\doc\*";               DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: doc

; sdk\ecal
Source: "{#ComponentStagingDir}\headers\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal
Source: "{#ComponentStagingDir}\sdk\*";               DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

Source: "{#DebugSdkStagingDir}\runtime\*";            DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal
Source: "{#DebugSdkStagingDir}\Unspecified\*";        DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

Source: "{#DebugSdkStagingDir}\app\*";                DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

;Source: "{#DebugSdkStagingDir}\headers\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal
Source: "{#DebugSdkStagingDir}\sdk\*";                DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

; sdk\protobuf
Source: "{#ComponentStagingDir}\libprotobuf\*";       DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\libprotobuf-lite\*";  DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\libprotoc\*";         DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protobuf-export\*";   DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protobuf-headers\*";  DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protoc\*";            DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf

Source: "{#DebugSdkStagingDir}\libprotobuf\*";        DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#DebugSdkStagingDir}\libprotobuf-lite\*";   DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#DebugSdkStagingDir}\libprotoc\*";          DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#DebugSdkStagingDir}\protobuf-export\*";    DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
;Source: "{#DebugSdkStagingDir}\protobuf-headers\*";  DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
; Source: "{#DebugSdkStagingDir}\protoc\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf

; sdk\hdf5
; we need to change the location of these configuration file (as hotfix we use skipifsourcedoesntexist flag)
Source: "{#ComponentStagingDir}\configinstall\*";     DestDir: "{app}";                   Flags: ignoreversion recursesubdirs skipifsourcedoesntexist;     Components: sdk\hdf5
Source: "{#ComponentStagingDir}\_configinstall\*";    DestDir: "{app}";                   Flags: ignoreversion recursesubdirs skipifsourcedoesntexist;     Components: sdk\hdf5

Source: "{#ComponentStagingDir}\headers\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\hdf5
Source: "{#ComponentStagingDir}\libraries\lib\*";     DestDir: "{app}\lib";               Flags: ignoreversion recursesubdirs;     Components: sdk\hdf5

; we need to change the location of these configuration file (as hotfix we use skipifsourcedoesntexist flag)
Source: "{#DebugSdkStagingDir}\configinstall\*";      DestDir: "{app}";                   Flags: ignoreversion recursesubdirs skipifsourcedoesntexist;     Components: sdk\hdf5
Source: "{#DebugSdkStagingDir}\_configinstall\*";     DestDir: "{app}";                   Flags: ignoreversion recursesubdirs skipifsourcedoesntexist;     Components: sdk\hdf5

Source: "{#DebugSdkStagingDir}\libraries\lib\*";      DestDir: "{app}\lib";               Flags: ignoreversion recursesubdirs;     Components: sdk\hdf5
Source: "{#DebugSdkStagingDir}\libraries\bin\*";      DestDir: "{app}\bin\";              Flags: ignoreversion recursesubdirs;     Components: sdk\hdf5

[Icons]
Name: "{group}\eCAL Launcher";                        Filename: "{app}\bin\ecal_launcher.exe";                     Components: applications
Name: "{group}\eCAL Monitor";                         Filename: "{app}\bin\ecal_mon_gui.exe";                      Components: applications
Name: "{group}\eCAL Recorder";                        Filename: "{app}\bin\ecal_rec_gui.exe";                      Components: applications
Name: "{group}\eCAL Player";                          Filename: "{app}\bin\ecal_play_gui.exe";                     Components: applications
Name: "{group}\eCAL Sys";                             Filename: "{app}\bin\ecal_sys_gui.exe";                      Components: applications
Name: "{group}\Configuration\Edit ecal.yaml";         Filename: "{commonappdata}\eCAL\ecal.yaml";                  Components: runtime

Name: "{group}\{cm:UninstallProgram,{#AppName}}";     Filename: "{uninstallexe}"
Name: "{userdesktop}\eCAL Launcher";                  Filename: "{app}\bin\ecal_launcher.exe"; Tasks: desktopicon; Components: applications

[Registry]
; Root key HKA is only available in Version 6 and above
; In Case of Non-Admin install mode, HKA will be resolved to HKCU, otherwise HKLM - see https://jrsoftware.org/ishelp/index.php?topic=setup_privilegesrequiredoverridesallowed
Root: HKA; Subkey: {code:GetEnvironmentSubkey};                         ValueType: string; ValueName: "ECAL_HOME"; ValueData: "{app}";                                  Flags: uninsdeletevalue; Components: applications

Root: HKA; Subkey: "SOFTWARE\Classes\.ecalrec";                         ValueType: string; ValueName: "";          ValueData: "ecal_rec_gui";                           Flags: uninsdeletevalue; Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_rec_gui";                     ValueType: string; ValueName: "";          ValueData: "eCAL Recorder Configuration";            Flags: uninsdeletekey;   Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_rec_gui\DefaultIcon";         ValueType: string; ValueName: "";          ValueData: "{app}\bin\ecal_rec_gui.exe,0";                                    Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_rec_gui\shell\open\command";  ValueType: string; ValueName: "";          ValueData: """{app}\bin\ecal_rec_gui.exe"" ""%1""";                           Components: applications

Root: HKA; Subkey: "SOFTWARE\Classes\.ecalmeas";                        ValueType: string; ValueName: "";          ValueData: "ecal_play_gui";                          Flags: uninsdeletevalue; Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_play_gui";                    ValueType: string; ValueName: "";          ValueData: "eCAL Player Configuration";              Flags: uninsdeletekey;   Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_play_gui\DefaultIcon";        ValueType: string; ValueName: "";          ValueData: "{app}\bin\ecal_play_gui.exe,0";                                   Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_play_gui\shell\open\command"; ValueType: string; ValueName: "";          ValueData: """{app}\bin\ecal_play_gui.exe"" ""%1""";                          Components: applications

Root: HKA; Subkey: "SOFTWARE\Classes\.ecalsys";                         ValueType: string; ValueName: "";          ValueData: "ecal_sys_gui";                           Flags: uninsdeletevalue; Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_sys_gui";                     ValueType: string; ValueName: "";          ValueData: "eCAL Sys Configuration";                 Flags: uninsdeletekey;   Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_sys_gui\DefaultIcon";         ValueType: string; ValueName: "";          ValueData: "{app}\bin\ecal_sys_gui.exe,0";                                    Components: applications
Root: HKA; Subkey: "SOFTWARE\Classes\ecal_sys_gui\shell\open\command";  ValueType: string; ValueName: "";          ValueData: """{app}\bin\ecal_sys_gui.exe"" ""%1""";                           Components: applications

[Code]
// add eCAL to system path
const
  ModPathName = 'modifypath';
var
  ModPathType: String;

// Settings for modpath.iss weather PATH should be extented for user only or system wide
function PrepareToInstall(var NeedsRestart: Boolean) : String;
begin
	if (IsAdminInstallMode() = true) then begin
	  ModPathType := 'system';
	end else begin
	  ModPathType := 'user';
	end;
	NeedsRestart := false;
	Result := '';
end;

// Get reg key for environment variables depending on install mode
function GetEnvironmentSubkey(Param: String) : String;
begin
	if (IsAdminInstallMode() = true) then begin
	  Result := 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment';
	end else begin
	  Result := 'Environment';
	end;
end;

function ModPathDir(): TArrayOfString;
  begin
    setArrayLength(Result, 4);
    Result[0] := ExpandConstant('{app}\bin');
    Result[1] := ExpandConstant('{app}\samples\bin');
  end;
#include "modpath.iss"
