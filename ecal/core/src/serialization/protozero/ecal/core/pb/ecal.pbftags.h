// Auto-generated by protoc-gen-pbftags. DO NOT EDIT.
// Source: ecal/core/pb/ecal.proto

#pragma once

#include <protozero/types.hpp>
#include <cstdint>

namespace eCAL { namespace pb { 
enum class Content : ::protozero::pbf_tag_type {
    optional_int64_id = 1,
    optional_int64_clock = 2,
    optional_int64_time = 3,
    optional_bytes_payload = 4,
    optional_int32_size = 6,
    optional_int64_hash = 7
};

inline constexpr uint32_t operator+(Content e) {
    return static_cast<uint32_t>(e);
}

enum class Sample : ::protozero::pbf_tag_type {
    optional_enum_cmd_type = 1,
    optional_message_host = 2,
    optional_message_process = 3,
    optional_message_service = 4,
    optional_message_client = 7,
    optional_message_topic = 5,
    optional_message_content = 6,
    optional_bytes_padding = 8
};

inline constexpr uint32_t operator+(Sample e) {
    return static_cast<uint32_t>(e);
}

enum class SampleList : ::protozero::pbf_tag_type {
    repeated_message_samples = 1
};

inline constexpr uint32_t operator+(SampleList e) {
    return static_cast<uint32_t>(e);
}

enum class eCmdType : std::int32_t {
    bct_none = 0,
    bct_set_sample = 1,
    bct_reg_publisher = 2,
    bct_reg_subscriber = 3,
    bct_reg_process = 4,
    bct_reg_service = 5,
    bct_reg_client = 6,
    bct_unreg_publisher = 12,
    bct_unreg_subscriber = 13,
    bct_unreg_process = 14,
    bct_unreg_service = 15,
    bct_unreg_client = 16
};

inline constexpr std::int32_t operator+(eCmdType v) {
    return static_cast<std::int32_t>(v);
}

} } 
