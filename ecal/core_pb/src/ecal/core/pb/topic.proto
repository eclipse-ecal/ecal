/* ========================= eCAL LICENSE =================================
 *
 * Copyright (C) 2016 - 2024 Continental Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * ========================= eCAL LICENSE =================================
*/

syntax = "proto3";

import "ecal/core/pb/layer.proto";

package eCAL.pb;

message DataTypeInformation
{
  string name       = 1;                           // name of the datatype
  string encoding   = 2;                           // encoding of the datatype (e.g. protobuf, flatbuffers, capnproto)
  bytes  desc       = 3;                           // descriptor information of the datatype (necessary for reflection)
}

message Topic                                      // eCAL topic
{
  // Reserved fields in enums are not supported in protobuf 3.0
  // reserved 9, 10, 11, 14, 15, 22 to 26, 29;

  int32               rclock                =  1;  // registration clock (heart beat)
  string              hname                 =  2;  // host name
  string              hgname                = 28;  // host group name
  int32               pid                   =  3;  // process id
  string              pname                 =  4;  // process name
  string              uname                 =  5;  // unit name
  string              tid                   =  6;  // topic id
  string              tname                 =  7;  // topic name
  string              direction             =  8;  // direction (publisher, subscriber)
                                                   // 9 = topic type + topic encoding (deprecated)
                                                   // 10 = topic description (protocol descriptor) (deprecated)
  DataTypeInformation tdatatype             = 30;  // topic datatype information (encoding & type & description)

  repeated TLayer     tlayer                = 12;  // active topic transport layers and it's specific parameter
  int32               tsize                 = 13;  // topic size
                      
  int32               connections_loc       = 16;  // number of local connected entities
  int32               connections_ext       = 17;  // number of external connected entities
  int32               message_drops         = 18;  // dropped messages
                      
  int64               did                   = 19;  // data send id (publisher setid)
  int64               dclock                = 20;  // data clock (send / receive action)
  int32               dfreq                 = 21;  // data frequency (send / receive samples per second) [mHz]

  map<string, string> attr                  = 27;  // generic topic description
}


message PubSubStaticInfo
{
  DataTypeInformation tdatatype             = 1;  // topic datatype information (encoding & type & description)
  map<string, string> attr                  = 2;  // generic topic description

  RegistrationID      process               = 3;

  string              host_group_name       = 4;  // <- should be made available via process? or is this something that we want per publisher for the future?
  string              uname                 = 5;  // unit name <- we don't need to send this per Subscriber'

}

message TopicStatistics
{
  int32               heartbeat             =  1;  // registration clock (heart beat)
  int64               data_clock            = 20;  // data clock (send / receive action)
  float               data_freq             = 21;  // data frequency (send / receive samples per second) [mHz]
  int32               connections_loc       = 16;  // number of local connected entities
  int32               connections_ext       = 17;  // number of external connected entities
  int32               message_drops         = 18;  // dropped messages
  int32               tsize                 = 13;  // topic size
}

message PublisherConnectionInformation
{
  repeated TLayer tlayer = 1;  // active topic transport layers and it's specific parameter
}

message PublisherRegistration
{
  RegistrationID            registration_id       = 1;
  string                    topic_name            = 2;

  bytes                     topic_info            = 3;  // Fixed Publisher Info
  bytes                     statistics            = 4;  // Publisher Statistics  - TopicStatistics
  bytes                     connection_parameters = 5; // Connection Parameters for Subscribers who want to connect
}

message PublisherUnregistration
{
  RegistrationID            registration_id      = 1;
}


message SubscriberRegistration
{
  // Reserved fields in enums are not supported in protobuf 3.0
  // reserved 7 to 11;
  RegistrationID            registration_id      = 1;
  string                    topic_name           = 2;

  bytes                     topic_info           = 3; // StaticProcessInfo
  bytes                     statistics           = 4; // DynamicProcessInfo
}

message SubscriberUnregistration
{
  // Reserved fields in enums are not supported in protobuf 3.0
  // reserved 7 to 11;
  RegistrationID            registration_id      = 1;
}